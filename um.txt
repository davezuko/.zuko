# kill background processes when script exits @bash
trap 'kill $(jobs -pr)' SIGINT SIGTERM EXIT

# install coc-snippets @vim
:CocInstall coc-snippets
:CocInstall coc-ultisnips

See https://github.com/neoclide/coc-snippets#examples for mappings.

If auto-complete inserts redundant text, it may be related to `snippets.autoTrigger` in coc-settings.json; try disabling it.

# change coc.vim configuration @vim
nvim ~/.config/nvim/coc-settings.json

# list coc.vim extensions @vim
:CocList extensions

# close all other buffers @vim
:%bd|e#

# connect fireplace to nREPL @vim
https://clojureverse.org/t/clojure-clojurescript-and-vim-a-beginners-perspective/1474/3

lein repl
user=> (use 'figwheel-sidecar.repl-api)
user=> (start-figwheel!)

:Piggieback (figwheel-sidecar.repl-api/repl-env)

# debug or profile node script @node
node --inspect index.js
node --inspect-brk index.js

# find which physical screen a browser window is on @electron
let winBounds = window.getBounds();
let whichScreen = screen.getDisplayNearestPoint({x: winBounds.x, y: winBounds.y});

# debug main process @electron
lldb path/to/release.app
run --remote-debugging-port=8315

# hover state on wrong element after drag and drop @chrome
https://bugs.chromium.org/p/chromium/issues/detail?id=410328

# bad request (400) with no response body or 431 @node @express
NodeJS decreased the allowed total header size from 80kb to 8kb. Before v12, exceeding this limit would cause the http module to respond with a 400 status code. With v12, it returns a more informative 431 status code.

To increase this limit, use `node --max-header-size=[bytes] my-script.js` (defaults to 8192)

# generate an SSH key
https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent

ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
ssh-add -K ~/.ssh/id_rsa

# debug ssh issues @git
Add "LogLevel DEBUG3" to the desired host (or to Host *) in ~/.ssh/config
